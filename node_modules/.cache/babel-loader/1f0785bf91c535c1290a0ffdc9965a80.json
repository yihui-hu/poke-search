{"ast":null,"code":"var _jsxFileName = \"/Users/yihui/poke-search/src/components/Types.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Types(props) {\n  // make each type capitalised\n  let type_1 = props.type_1.charAt(0).toUpperCase() + props.type_1.slice(1);\n  let type_2 = props.type_2.charAt(0).toUpperCase() + props.type_2.slice(1);\n\n  function determineColor() {\n    if (type_1 === \"Grass\" || type_2 === \"Grass\") {\n      return {\n        color: \"white\",\n        backgroundColor: \"green\"\n      };\n    } else if (type_1 === \"Water\" || type_2 === \"Water\") {\n      return {\n        color: \"white\",\n        backgroundColor: \"blue\"\n      };\n    } else {\n      return {\n        color: \"white\",\n        backgroundColor: \"black\"\n      };\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"type\",\n      style: determineColor(),\n      children: type_1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), type_2 !== \"Nil\" && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"type\",\n      children: type_2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_c = Types;\n\nvar _c;\n\n$RefreshReg$(_c, \"Types\");","map":{"version":3,"names":["React","Types","props","type_1","charAt","toUpperCase","slice","type_2","determineColor","color","backgroundColor"],"sources":["/Users/yihui/poke-search/src/components/Types.js"],"sourcesContent":["import React from \"react\"\n\nexport default function Types(props) {\n\n    // make each type capitalised\n    let type_1 = props.type_1.charAt(0).toUpperCase() + props.type_1.slice(1)\n    let type_2 = props.type_2.charAt(0).toUpperCase() + props.type_2.slice(1)\n\n    function determineColor() {\n        if (type_1 === \"Grass\" || type_2 === \"Grass\") {\n            return {\n                color: \"white\",\n                backgroundColor: \"green\"\n            }\n        } else if (type_1 === \"Water\" || type_2 === \"Water\") {\n            return {\n                color: \"white\",\n                backgroundColor: \"blue\"\n            }\n        } else {\n            return {\n                color: \"white\",\n                backgroundColor: \"black\"\n            }\n        }\n    }\n    return (\n        <div>\n            <span className=\"type\" style={determineColor()}>{type_1}</span>\n            {type_2 !== \"Nil\" && <span className=\"type\">{type_2}</span>}\n        </div>\n    )\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;EAEjC;EACA,IAAIC,MAAM,GAAGD,KAAK,CAACC,MAAN,CAAaC,MAAb,CAAoB,CAApB,EAAuBC,WAAvB,KAAuCH,KAAK,CAACC,MAAN,CAAaG,KAAb,CAAmB,CAAnB,CAApD;EACA,IAAIC,MAAM,GAAGL,KAAK,CAACK,MAAN,CAAaH,MAAb,CAAoB,CAApB,EAAuBC,WAAvB,KAAuCH,KAAK,CAACK,MAAN,CAAaD,KAAb,CAAmB,CAAnB,CAApD;;EAEA,SAASE,cAAT,GAA0B;IACtB,IAAIL,MAAM,KAAK,OAAX,IAAsBI,MAAM,KAAK,OAArC,EAA8C;MAC1C,OAAO;QACHE,KAAK,EAAE,OADJ;QAEHC,eAAe,EAAE;MAFd,CAAP;IAIH,CALD,MAKO,IAAIP,MAAM,KAAK,OAAX,IAAsBI,MAAM,KAAK,OAArC,EAA8C;MACjD,OAAO;QACHE,KAAK,EAAE,OADJ;QAEHC,eAAe,EAAE;MAFd,CAAP;IAIH,CALM,MAKA;MACH,OAAO;QACHD,KAAK,EAAE,OADJ;QAEHC,eAAe,EAAE;MAFd,CAAP;IAIH;EACJ;;EACD,oBACI;IAAA,wBACI;MAAM,SAAS,EAAC,MAAhB;MAAuB,KAAK,EAAEF,cAAc,EAA5C;MAAA,UAAiDL;IAAjD;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKI,MAAM,KAAK,KAAX,iBAAoB;MAAM,SAAS,EAAC,MAAhB;MAAA,UAAwBA;IAAxB;MAAA;MAAA;MAAA;IAAA,QAFzB;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH;KA9BuBN,K"},"metadata":{},"sourceType":"module"}